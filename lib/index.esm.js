/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function e(){for(var e=0,r=0,n=arguments.length;r<n;r++)e+=arguments[r].length;var t=Array(e),o=0;for(r=0;r<n;r++)for(var a=arguments[r],i=0,c=a.length;i<c;i++,o++)t[o]=a[i];return t}var r=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},n=function(e,r){return e.typeReplace[r]||r},t=function(e){var r=e.description;return r?"// "+r:"// NO DESCRIPTION"},o=function(o){var a=o.regexpMethods,i=o.modificators,c=function(e,r){if(!a.excludeDTO.test(e)&&r)return"export interface "+function(e){if(a.nameInterface.test(e)){var r=e.match(a.nameInterface);return r?r[1]:r}return e.split("[")[0]}(e)+" {"+r+"}"};return function(o){var u=o.definitions,f=[],p=[],s=Object.keys(u).map((function(e){var o=u[e].properties,s=Object.keys(o).map((function(e){var c,u=o[e],s=(u.pagination,function(e,r){var n={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&r.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(t=Object.getOwnPropertySymbols(e);o<t.length;o++)r.indexOf(t[o])<0&&Object.prototype.propertyIsEnumerable.call(e,t[o])&&(n[t[o]]=e[t[o]])}return n}(u,["pagination"]));return"enum"in s?(p.includes(e)||f.push((c=s,"export enum Enum"+r(e)+" {\n  "+c.enum.map((function(e){return e+" = '"+e+"', "+t(c)})).join("\n  ")+",\n}")),p.push(e),function(e){return e+": Enum"+r(e)+";"}(e)):function(e,r){var o,c=function(n){return"\n  "+e+": "+(i.interfaceReplace[n]||n)+"; "+t(r)+"\n"};return"array"===r.type?r.items.$ref?c(o=r.items.$ref.match(a.matchInterfaceName)[1]+"[]"):c(n(i,r.items.type)+"[]"):c("$ref"in r?(o=r.$ref.match(a.matchInterfaceName))?o[1]:o:n(i,r.type))}(e,s)})).join("");return c(e,s)}));return e(f,s).join("\n").replace(a.replaceSpace,"")}},a=require("fs"),i=require("git-diff"),c=require("http");export default function(r){var u=r.API,f=r.regexpMethods,p=r.modificators,s=r.filePath;return c.get(u,(function(r){var c=r.statusCode,u=function(e){return e&&console.log(e)},m=function(e){e&&a.readFile(s,"utf8",(function(r,n){n&&console.log(i(n,e,{color:!0,wordDiff:!0,noHeaders:!0})||"no changes"),a.writeFile(s,e,u)}))};if(200===c){r.setEncoding("utf8");var l="";r.on("data",(function(e){l+=e})),r.on("end",(function(){try{var r=JSON.parse(l);if(r.openapi.startsWith("3")){var a=function(r){var o=r.regexpMethods,a=r.modificators,i=function(e){return e.join("\n").replace(o.replaceSpace,"")},c=function(e,r){return"export enum "+e+" {\n  "+r.enum.map((function(e){return e+' = "'+e+'", '+t(r)})).join("\n  ")+"\n}"},u=function(e,r){for(var o=[],c=[],u=function(e){return e.replace(/^\#\/components\/schemas\//gm,"")},f=function(e){for(var r=n(a,e.type),t=0,o=Object.keys(e);t<o.length;t++){var i=o[t];if(e[i]instanceof Object){var c=e[i];c.hasOwnProperty("$ref")?r=u(c.$ref):c.hasOwnProperty("type")&&(r=n(a,c.type))}}return r},p=function(e){var o=r.properties[e];c.push(e+": "+(o.$ref?u(o.$ref):"array"===o.type?f(o)+"[]":"object"===o.type?f(o):n(a,o.type))+"; "+t(o))},s=0,m=Object.keys(r.properties);s<m.length;s++){p(m[s])}return o.push("export interface "+e+" {\n  "+c.join("\n ")+"\n}"),i(o)};return function(r){for(var n=r.components.schemas,t=[],a=[],f=0,p=Object.keys(n);f<p.length;f++){var s=p[f];s.startsWith("Enum")||n[s].hasOwnProperty("enum")?t.push(c(s,n[s])):o.excludeDTO.test(s)||a.push(u(s,n[s]))}return i(e(t,a))}}({regexpMethods:f,modificators:p})(r);return m(a)}if(r.openapi.startsWith("2")){var i=o({regexpMethods:f,modificators:p})(r);return m(i)}}catch(e){console.error(e.message)}}))}}))}
//# sourceMappingURL=index.esm.js.map
